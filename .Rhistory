setwd("~/Documents/publication/PtD")
pa[1]
pa = c(154, 551, 1767, 3592, 6717, 8488, 20988)
pa[1]
y = c()
pa = c(154, 551, 1767, 3592, 6717, 8488, 20988)
ba = c(39.7, 185.62, 587.12, 1337.12, 1903.84, 6278.84)
pc = c(0.1, 0.12, 0.22, 0.24, 0.32, 0.35, 0.37)
for(i in 1:30000){
if(x < pa[1]){
y[i] = 0
} else if(x < pa[2]){
y[i] = (x - pa[1]) * pc[1]
} else if(x < pa[3]){
y[i] = (x - pa[2]) * pc[2] + ba[1]
} else if(x < pa[4]){
y[i] = (x - pa[3]) * pc[3] + ba[2]
} else if(x < pa[5]){
y[i] = (x - pa[4]) * pc[4] + ba[3]
} else if(x < pa[6]){
y[i] = (x - pa[5]) * pc[5] + ba[4]
} else if(x < pa[7]){
y[i] = (x - pa[6]) * pc[6] + ba[5]
} else if(x > pa[8]){
y[i] = (x - pa[7]) * pc[7] + ba[6]
}
}
y = c()
pa = c(154, 551, 1767, 3592, 6717, 8488, 20988)
ba = c(39.7, 185.62, 587.12, 1337.12, 1903.84, 6278.84)
pc = c(0.1, 0.12, 0.22, 0.24, 0.32, 0.35, 0.37)
for(x in 1:30000){
if(x < pa[1]){
y[i] = 0
} else if(x < pa[2]){
y[i] = (x - pa[1]) * pc[1]
} else if(x < pa[3]){
y[i] = (x - pa[2]) * pc[2] + ba[1]
} else if(x < pa[4]){
y[i] = (x - pa[3]) * pc[3] + ba[2]
} else if(x < pa[5]){
y[i] = (x - pa[4]) * pc[4] + ba[3]
} else if(x < pa[6]){
y[i] = (x - pa[5]) * pc[5] + ba[4]
} else if(x < pa[7]){
y[i] = (x - pa[6]) * pc[6] + ba[5]
} else if(x > pa[8]){
y[i] = (x - pa[7]) * pc[7] + ba[6]
}
}
for(x in 1:30000){
if(x < pa[1]){
y[i] = 0
} else if(x < pa[2]){
y[i] = (x - pa[1]) * pc[1]
} else if(x < pa[3]){
y[i] = (x - pa[2]) * pc[2] + ba[1]
} else if(x < pa[4]){
y[i] = (x - pa[3]) * pc[3] + ba[2]
} else if(x < pa[5]){
y[i] = (x - pa[4]) * pc[4] + ba[3]
} else if(x < pa[6]){
y[i] = (x - pa[5]) * pc[5] + ba[4]
} else if(x < pa[7]){
y[i] = (x - pa[6]) * pc[6] + ba[5]
} else {
y[i] = (x - pa[7]) * pc[7] + ba[6]
}
}
plot(x,y)
y
y = c()
pa = c(154, 551, 1767, 3592, 6717, 8488, 20988)
ba = c(39.7, 185.62, 587.12, 1337.12, 1903.84, 6278.84)
pc = c(0.1, 0.12, 0.22, 0.24, 0.32, 0.35, 0.37)
for(i in 1:30000){
if(i < pa[1]){
y[i] = 0
} else if(i < pa[2]){
y[i] = (i - pa[1]) * pc[1]
} else if(i < pa[3]){
y[i] = (i - pa[2]) * pc[2] + ba[1]
} else if(i < pa[4]){
y[i] = (i - pa[3]) * pc[3] + ba[2]
} else if(i < pa[5]){
y[i] = (i - pa[4]) * pc[4] + ba[3]
} else if(i < pa[6]){
y[i] = (i - pa[5]) * pc[5] + ba[4]
} else if(i < pa[7]){
y[i] = (i - pa[6]) * pc[6] + ba[5]
} else {
y[i] = (i - pa[7]) * pc[7] + ba[6]
}
}
plot(i,y)
y
plot(y)
library(ggplot2)
y = data.frame(y)
y
str(y)
data = cbind(1:30000, y)
data
str(data)
colnames(data) = c("amount of wages", "Tax withholding")
str(data)
ggplot(data, aes(x = data[1], y = data[2]) +
ggplot(data, aes(x = data[1], y = data[2]) +
ggplot(data, aes(x = data[1], y = data[2])) +
geom_line(alpha = 0.5) +
ggtitle("Life expectancy over time") + theme_bw()
str(data)
data[1]
data[2]
ggplot(data, aes(x = "amount of wages", y = "Tax withholding")) +
geom_line(alpha = 0.5) +
ggtitle("Life expectancy over time") + theme_bw()
ggplot(data, aes(x = "amount of wages", y = "Tax withholding")) +
geom_line() +
ggtitle("Life expectancy over time") + theme_bw()
ggplot(data, aes(x = `amount of wages`, y = `Tax withholding``)) +
geom_line() +
ggtitle("Life expectancy over time") + theme_bw()
ggplot(data, aes(x = `amount of wages`, y = `Tax withholding`)) +
geom_line() +
ggtitle("Life expectancy over time") + theme_bw()
ggplot(data, aes(x = `Amount of wages`, y = `Tax withholding`)) +
geom_line(color = "red") +
ggtitle("Life expectancy over time") + theme_bw()
colnames(data) = c("Amount of wages", "Tax withholding")
str(data)
ggplot(data, aes(x = `Amount of wages`, y = `Tax withholding`)) +
geom_line(color = "red") +
ggtitle("Life expectancy over time") + theme_bw()
180+237
114*1915
124*1915
18000/1915
library(tidyverse)
library(lubridate)
library(pander)
df <- read_csv('../data/survey.csv')
getwd()
df <- read_csv('./data/survey.csv')
daf <- df %>%
gather(feature, option, area_1:mount_3, na.rm = T) %>%
mutate(criteria = ifelse(str_detect(feature, "1"), "safety",
ifelse(str_detect(feature, "2"), "applicability", 'cost-effectiveness')),
feature = str_replace_all(feature, "_[0-9]", "")) %>%
select(ID, pos, criteria, feature, option) %>%
mutate(criteria = parse_factor(criteria,
levels = c('safety', 'applicability', 'cost-effectiveness')),
feature = parse_factor(feature,
levels = c('area', 'material', 'pitch', 'fall', 'access',
'conduit', 'inverter', 'mount')),
pos = parse_factor(pos, levels = c('solar_contractor', 'contractor', 'designer',
'electrical')))
ggplot(daf, aes(x = option, fill = pos)) +
facet_grid(criteria ~ feature) +
geom_bar(width = 0.8) +
scale_x_discrete(limits = c(1:4)) +
scale_y_continuous(breaks = seq(0, 11, len = 12)) +
theme_bw() + theme(legend.position = c(0.11, 0.2),
legend.background = element_rect(color = 1))
g_ov_sur <- ggplot(daf, aes(x = option, fill = pos)) +
facet_grid(criteria ~ feature) +
geom_bar(width = 0.8) +
scale_x_discrete(limits = c(1:4)) +
scale_y_continuous(breaks = seq(0, 11, len = 12)) +
theme_bw() + theme(legend.position = c(0.11, 0.2),
legend.background = element_rect(color = 1))
col <- c('red', 'green', 'blue', 'purple', 'grey')
names(col) = levels(daf$pos)
gplt <- function(i){
df <- daf %>%
filter(pos == i)
ggplot(df, aes(x = option)) +
facet_grid(criteria ~ feature) +
geom_bar(width = 0.8, col = col[[i]]) +
scale_x_discrete(limits = c(1:4)) +
scale_y_continuous(breaks = seq(0, 9, len = 10)) +
theme_bw() + theme(legend.position = c(0.11, 0.2),
legend.background = element_rect(color = 1)) +
ggtitle(paste0("Features chosen by ", i))
}
f_sur <- function(i){
df <- daf %>%
filter(pos == i)
ggplot(df, aes(x = option)) +
facet_grid(criteria ~ feature) +
geom_bar(width = 0.8, col = col[[i]]) +
scale_x_discrete(limits = c(1:4)) +
scale_y_continuous(breaks = seq(0, 9, len = 10)) +
theme_bw() + theme(legend.position = c(0.11, 0.2),
legend.background = element_rect(color = 1)) +
ggtitle(paste0("Features chosen by ", i))
}
save(g_ov_sur, f_sur, file = "./data/sur.Rdata")
load("./data/sur.Rdata")
g_ov_sur
f_sur("solar_contractor")
g_ov_sur
g_ov_sur
f_sur("solar_contractor")
f_sur("solar_contractor")
f_sur("contractor")
f_sur("designer")
df <- read_csv('./data/survey.csv')
View(df)
g_ov_sur <- ggplot(daf, aes(x = option, fill = pos)) +
facet_grid(criteria ~ feature) +
geom_bar(width = 0.8) +
scale_x_discrete(limits = c(1:4)) +
scale_y_continuous(breaks = seq(0, 11, len = 12)) +
theme_bw() + theme(legend.position = c(0.11, 0.2),
legend.background = element_rect(color = 1))
g_ov_sur
load("../data/sur.Rdata")
df <- read_csv('./data/survey.csv')
daf <- df %>%
gather(feature, option, area_1:mount_3, na.rm = T) %>%
mutate(criteria = ifelse(str_detect(feature, "1"), "safety",
ifelse(str_detect(feature, "2"), "applicability", 'cost-effectiveness')),
feature = str_replace_all(feature, "_[0-9]", "")) %>%
select(ID, pos, criteria, feature, option) %>%
mutate(criteria = parse_factor(criteria,
levels = c('safety', 'applicability', 'cost-effectiveness')),
feature = parse_factor(feature,
levels = c('area', 'material', 'pitch', 'fall', 'access',
'conduit', 'inverter', 'mount')),
pos = parse_factor(pos, levels = c('solar_contractor', 'contractor', 'designer',
'electrical')))
g_ov_sur <- ggplot(daf, aes(x = option, fill = pos)) +
facet_grid(criteria ~ feature) +
geom_bar(width = 0.8) +
scale_x_discrete(limits = c(1:4)) +
scale_y_continuous(breaks = seq(0, 11, len = 12)) +
theme_bw() + theme(legend.position = c(0.11, 0.2),
legend.background = element_rect(color = 1))
col <- c('red', 'green', 'blue', 'purple', 'grey')
names(col) = levels(daf$pos)
f_sur <- function(i){
df <- daf %>%
filter(pos == i)
ggplot(df, aes(x = option)) +
facet_grid(criteria ~ feature) +
geom_bar(width = 0.8, col = col[[i]]) +
scale_x_discrete(limits = c(1:4)) +
scale_y_continuous(breaks = seq(0, 9, len = 10)) +
theme_bw() + theme(legend.position = c(0.11, 0.2),
legend.background = element_rect(color = 1)) +
ggtitle(paste0("Features chosen by ", i))
}
save(g_ov_sur, f_sur, file = "./data/sur.Rdata")
save(g_ov_sur, daf, f_sur, file = "./data/sur.Rdata")
f_sur <- function(i){
col <- c('red', 'green', 'blue', 'purple', 'grey')
names(col) = levels(daf$pos)
df <- daf %>%
filter(pos == i)
ggplot(df, aes(x = option)) +
facet_grid(criteria ~ feature) +
geom_bar(width = 0.8, col = col[[i]]) +
scale_x_discrete(limits = c(1:4)) +
scale_y_continuous(breaks = seq(0, 9, len = 10)) +
theme_bw() + theme(legend.position = c(0.11, 0.2),
legend.background = element_rect(color = 1)) +
ggtitle(paste0("Features chosen by ", i))
}
save(g_ov_sur, daf, f_sur, file = "./data/sur.Rdata")
g_ov_sur
7.29/27
library(tidyverse)
library(lubridate)
library(pander)
library(psych)
library (cluster)
library(reshape)
library(reshape2)
library(som)
library(GPArotation)
library(corrplot)
library(GGally)
# library(MASS)
library(faraway)
library(sjPlot)
df <- read_csv('./data/survey.csv')
View(df)
daf <- df %>%
gather(feature, option, area_1:mount_3, na.rm = T) %>%
mutate(criteria = ifelse(str_detect(feature, "1"), "safety",
ifelse(str_detect(feature, "2"), "applicability", 'cost-effectiveness')),
feature = str_replace_all(feature, "_[0-9]", "")) %>%
select(ID, pos, criteria, feature, option) %>%
mutate(criteria = parse_factor(criteria,
levels = c('safety', 'applicability', 'cost-effectiveness')),
feature = parse_factor(feature,
levels = c('area', 'material', 'pitch', 'fall', 'access',
'conduit', 'inverter', 'mount')),
pos = parse_factor(pos, levels = c('solar_contractor', 'contractor', 'designer',
'electrical')))
View(daf)
g_ov_sur <- ggplot(daf, aes(x = option, fill = pos)) +
facet_grid(criteria ~ feature) +
geom_bar(width = 0.8) +
scale_x_discrete(limits = c(1:4)) +
scale_y_continuous(breaks = seq(0, 11, len = 12)) +
theme_bw() + theme(legend.position = c(0.11, 0.2),
legend.background = element_rect(color = 1))
f_sur <- function(i){
col <- c('red', 'green', 'blue', 'purple', 'grey')
names(col) = levels(daf$pos)
df <- daf %>%
filter(pos == i)
ggplot(df, aes(x = option)) +
facet_grid(criteria ~ feature) +
geom_bar(width = 0.8, col = col[[i]]) +
scale_x_discrete(limits = c(1:4)) +
scale_y_continuous(breaks = seq(0, 9, len = 10)) +
theme_bw() + theme(legend.position = c(0.11, 0.2),
legend.background = element_rect(color = 1)) +
ggtitle(paste0("Features chosen by ", i))
}
save(g_ov_sur, daf, f_sur, file = "./data/sur.Rdata")
load("./data/sur.Rdata")
load("../data/sur.Rdata")
g_ov_sur
